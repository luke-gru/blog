<%
    # locals
    #   html (String): html for the editor textarea, ex: '<div>Hello, world!</div>
    #   input_name (String): the editor form input, ex: 'post[content]'
    #   form_selector (String): the form's unique selector
%>
<div id="editor-wrapper">
<div class="easy-comment-editor">
  <div class="e-toolbar">
    <div class="e-line">

      <div class="e-box">
        <span class="editor-btn e-icon e-smaller" data-action="bold" data-tag-name="b" title="Bold">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/bold.png"/>
        </span>
        <span class="editor-btn e-icon e-smaller" data-action="italic" data-tag-name="i" title="Italic">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/italic.png"/>
        </span>
        <span class="editor-btn e-icon e-smaller" data-action="underline" data-tag-name="u" title="Underline">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/underline.png"/>
        </span>
        <span class="editor-btn e-icon e-smaller" data-action="strikeThrough" data-tag-name="strike" title="Strike through">
          <img src="https://img.icons8.com/fluency-systems-filled/30/000000/strikethrough.png"/>
        </span>
      </div>

      <div class="e-box">
        <span class="editor-btn e-icon e-has-submenu">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/align-left.png"/>
          <div class="e-submenu">
            <span class="editor-btn e-icon" data-action="justifyLeft" data-style="textAlign:left" title="Justify left">
              <img src="https://img.icons8.com/fluency-systems-filled/48/000000/align-left.png"/>
            </span>
            <span class="editor-btn e-icon" data-action="justifyCenter" data-style="textAlign:center" title="Justify center">
              <img src="https://img.icons8.com/fluency-systems-filled/48/000000/align-center.png"/>
            </span>
            <span class="editor-btn e-icon" data-action="justifyRight" data-style="textAlign:right" title="Justify right">
              <img src="https://img.icons8.com/fluency-systems-filled/48/000000/align-right.png"/>
            </span>
            <span class="editor-btn e-icon" data-action="formatBlock" data-style="textAlign:justify" title="Justify block">
              <img src="https://img.icons8.com/fluency-systems-filled/48/000000/align-justify.png"/>
            </span>
          </div>
        </span>
        <span class="editor-btn e-icon" data-action="insertOrderedList" data-tag-name="ol" title="Insert ordered list">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/numbered-list.png"/>
        </span>
        <span class="editor-btn e-icon" data-action="insertUnorderedList" data-tag-name="ul" title="Insert unordered list">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/bulleted-list.png"/>
        </span>
        <span class="editor-btn e-icon" data-action="outdent" title="Outdent" data-required-tag="li">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/outdent.png"/>
        </span>
        <span class="editor-btn e-icon" data-action="indent" title="Indent">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/indent.png"/>
        </span>

      </div>
      <div class="e-box">
        <span class="editor-btn e-icon" data-action="insertHorizontalRule" title="Insert horizontal rule">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/horizontal-line.png"/>
        </span>
      </div>

    </div>
    <div class="e-line">

      <div class="e-box">
        <span class="editor-btn e-icon e-smaller" data-action="undo" title="Undo">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/undo--v1.png"/>
        </span>
        <span class="editor-btn e-icon" data-action="removeFormat" title="Remove format">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/remove-format.png"/>
        </span>
      </div>

      <div class="e-box">
        <span class="editor-btn e-icon e-smaller" data-action="createLink" title="Insert Link">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/add-link.png"/>
        </span>
        <span class="editor-btn e-icon e-smaller" data-action="unlink" data-tag-name="a" title="Unlink">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/delete-link.png"/>
        </span>
      </div>

      <div class="e-box">
        <span class="editor-btn e-icon" data-action="toggle-view" title="Show HTML-Code">
          <img src="https://img.icons8.com/fluency-systems-filled/48/000000/source-code.png"/>
        </span>
      </div>

    </div>
  </div>
  <div class="e-content-area">
    <div class="e-visuell-view" contenteditable><%= html.html_safe %></div>
    <textarea class="e-html-view"></textarea>
  </div>
</div>
</div>

<input type="hidden" value="" name="<%= input_name %>" />

<div class="e-modal">
  <div class="e-modal-bg"></div>
  <div class="e-modal-wrapper">
    <div class="e-close">âœ–</div>
    <div class="e-modal-content" id="modalCreateLink">
      <h3>Insert Link</h3>
      <input type="text" id="linkValue" placeholder="Link (example: https://webdeasy.de/)">
      <div class="e-row">
        <input type="checkbox" id="new-tab">
        <label for="new-tab">Open in new Tab?</label>
      </div>
      <button class="e-done">Done</button>
    </div>
  </div>
</div>

<script>
  // define vars
  const editor = document.getElementsByClassName('easy-comment-editor')[0];
  const toolbar = editor.getElementsByClassName('e-toolbar')[0];
  const buttons = toolbar.querySelectorAll('.editor-btn:not(.e-has-submenu)');
  const contentArea = editor.getElementsByClassName('e-content-area')[0]; // wrapper for visual and html views
  const visuellView = contentArea.getElementsByClassName('e-visuell-view')[0]; // wysiwyg
  const htmlView = contentArea.getElementsByClassName('e-html-view')[0]; // html
  const modal = document.getElementsByClassName('e-modal')[0]; // link add modal

  // add active tag event
  document.addEventListener('selectionchange', selectionChange);

  // add paste event
  visuellView.addEventListener('paste', pasteEvent);

  // add paragraph tag on new line
  contentArea.addEventListener('keypress', addParagraphTag);

  // add toolbar button actions
  for(let i = 0; i < buttons.length; i++) {
    let button = buttons[i];

    button.addEventListener('click', function(e) {
      let action = this.dataset.action;

      switch(action) {
        case 'toggle-view':
          execCodeAction(this, editor);
          break;
        case 'createLink':
          execLinkAction();
          break;
        default:
          execDefaultAction(action);
      }

    });
  }

  /** 
   * This function toggles between visual and html view
   */
  function execCodeAction(button, editor) {
    const visuellView = contentArea.getElementsByClassName('e-visuell-view')[0];
    const htmlView = contentArea.getElementsByClassName('e-html-view')[0];
    if (button.classList.contains('active')) { // show visuell view
      visuellView.innerHTML = htmlView.value;
      htmlView.style.display = 'none'
      visuellView.style.display = 'block'
      button.classList.remove('active');
    } else {  // show html/code view
      <%#htmlView.innerText = visuellView.innerHTML;%>
      htmlView.value = visuellView.innerHTML.trim();
      visuellView.style.display = 'none'
      htmlView.style.display = 'block';
      button.classList.add('active'); 
    }
  }

  /**
   * This function adds a link to the current selection
   */
  function execLinkAction() {  
    modal.style.display = 'block';
    let selection = saveSelection();

    let submit = modal.querySelectorAll('button.e-done')[0];
    let close = modal.querySelectorAll('.e-close')[0];

    // done button active => add link
    submit.addEventListener('click', function(e) {
      e.preventDefault();
      let newTabCheckbox = modal.querySelectorAll('#new-tab')[0];
      let linkInput = modal.querySelectorAll('#linkValue')[0];
      let linkValue = linkInput.value;
      let newTab = newTabCheckbox.checked;

      restoreSelection(selection);

      if(window.getSelection().toString()) {
        let a = document.createElement('a');
        a.href = linkValue;
        if(newTab) a.target = '_blank';
        window.getSelection().getRangeAt(0).surroundContents(a);
      }

      modal.style.display = 'none';
      linkInput.value = '';

      // deregister modal events
      submit.removeEventListener('click', arguments.callee);
      close.removeEventListener('click', arguments.callee);
    });  

    // close modal on X click
    close.addEventListener('click', function(e) {
      e.preventDefault();
      let linkInput = modal.querySelectorAll('#linkValue')[0];

      modal.style.display = 'none';
      linkInput.value = '';

      // deregister modal events
      submit.removeEventListener('click', arguments.callee);
      close.removeEventListener('click', arguments.callee);
    });
  }

  /**
   * This function executes all 'normal' actions
   */
  function execDefaultAction(action) {
    document.execCommand(action, false);
  }

  /**
   * Saves the current selection
   */
  function saveSelection() {
    if(window.getSelection) {
      sel = window.getSelection();
      if(sel.getRangeAt && sel.rangeCount) {
        let ranges = [];
        for(var i = 0, len = sel.rangeCount; i < len; ++i) {
          ranges.push(sel.getRangeAt(i));
        }
        return ranges;
      }
    } else if (document.selection && document.selection.createRange) {
      return document.selection.createRange();
    }
    return null;
  }

  /**
   *  Loads a saved selection
   */
  function restoreSelection(savedSel) {
    if(savedSel) {
      if(window.getSelection) {
        sel = window.getSelection();
        sel.removeAllRanges();
        for(var i = 0, len = savedSel.length; i < len; ++i) {
          sel.addRange(savedSel[i]);
        }
      } else if(document.selection && savedSel.select) {
        savedSel.select();
      }
    }
  }

  /**
   * Sets the current selected format buttons active/inactive
   */ 
  function selectionChange(e) {

    for(let i = 0; i < buttons.length; i++) {
      let button = buttons[i];

      // don't remove active class on code toggle button
      if(button.dataset.action === 'toggle-view') continue;

      button.classList.remove('active');
    }

    const selection = window.getSelection()
    if(!selection.anchorNode || !childOf(selection.anchorNode.parentNode, editor)) return false;

    parentTagActive(selection.anchorNode.parentNode);
  }

  /**
   * Checks if the passed child has the passed parent
   */
  function childOf(child, parent) {
    return parent.contains(child);
  }

  /**
   * Sets the tag active that is responsible for the current element
   */
  function parentTagActive(elem) {
    if(!elem ||!elem.classList || elem.classList.contains('visuell-view')) return false;

    let toolbarButton;

    // active by tag names
    let tagName = elem.tagName.toLowerCase();
    toolbarButton = document.querySelectorAll(`.e-toolbar .editor-btn[data-tag-name="${tagName}"]`)[0];
    if(toolbarButton) {
      toolbarButton.classList.add('active');
    }

    // active by text-align
    let textAlign = elem.style.textAlign;
    toolbarButton = document.querySelectorAll(`.e-toolbar .editor-btn[data-style="textAlign:${textAlign}"]`)[0];
    if(toolbarButton) {
      toolbarButton.classList.add('active');
    }

    return parentTagActive(elem.parentNode);
  }

  /**
   * Handles the paste event and removes all HTML tags
   */
  function pasteEvent(e) {
    e.preventDefault();

    let text = (e.originalEvent || e).clipboardData.getData('text/plain');
    document.execCommand('insertHTML', false, text);
  }

  /**
   * This functions adds a paragraph tag when the enter key is pressed
   */
  function addParagraphTag(evt) {
    if (evt.keyCode == '13') {

      const selection = window.getSelection
      // don't add a p tag on list item
      if(!selection.anchorNode || selection.anchorNode.parentNode.tagName === 'LI') return;
      document.execCommand('formatBlock', false, 'p');
    }
  }

  $(function() {
    $("<%= form_selector %>").submit(function() {
      let value = '';
      if ($('.e-visuell-view:visible').length > 0) {
        value = visuellView.innerHTML;
      } else {
        value = htmlView.value
      }
      $('input[name="<%= input_name %>"]:hidden')[0].value = value;
    })
  })
</script>

<style>
#editor-wrapper {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: 'Helvetica Neue', 'Helvetica', arial, sans-serif;
}

/* WYSIWYG Editor */
.easy-comment-editor {
  width: 40rem;
  min-height: 18rem;
  box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.3);
  border-radius: 3px;
  margin: 2rem 0;
  zoom: 150%;
  
  .e-toolbar {
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);
    
    .e-line {
      display: flex;
      border-bottom: 1px solid #e2e2e2;
      
      &:last-child {
        border-bottom: none;
      }
      
      .e-box {
        display: flex;
        border-left: 1px solid #e2e2e2; 
        
        .editor-btn {
          display: block;
          display: flex;
          align-items: center;
          justify-content: center;
          position: relative;
          transition: .2s ease all;

          &:hover, &.active {
            background-color: #e1e1e1;
            cursor: pointer;
          }
          
          &.e-icon img {
            width: 15px;
            padding: 9px;
            box-sizing: content-box;
          }
          
          &.e-icon.smaller img {
            width: 16px;
          }
          
          &.e-has-submenu {
            width: 20px;
            padding: 0 10px;
            
            &::after {
              content: '';
              width: 6px;
              height: 6px;
              position: absolute;
              background-image: url(https://img.icons8.com/ios-glyphs/30/000000/chevron-down.png);
              background-repeat: no-repeat;
              background-size: cover;
              background-position: center;
              right: 4px;
            }
            
            .e-submenu {
              display: none;
              position: absolute;
              top: 34px;
              left: -1px;
              z-index: 10;
              background-color: #FFF;
              border: 1px solid #b5b5b5;
              border-top: none;
              
              .e-btn {
                width: 39px;
              }
              
              &:hover {
                display: block;
              }
            }
            
            &:hover .e-submenu {
              display: block;
            }
          }
        }  
      }
    }
  }
  
  .e-content-area {
    padding: 15px 12px;
    line-height: 1.5;
    
    .e-visuell-view {
      outline: none;
      min-height: 12rem;
      
      p {
        margin: 12px 0;
      } 
    }
    
    .e-html-view {
      outline: none;
      display: none;
      width: 100%;
      height: 200px;
      border: none;
      resize: none;
    }
  }
}


/* Modal */
.e-modal {
  z-index: 40;
  display: none;
  
  .e-modal-wrapper {
    background-color: #FFF;
    padding: 1rem;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20rem;
    min-height: 10rem;
    z-index: 41;
    
    .e-close {
      position: absolute;
      top: 1rem;
      right: 1rem;
      cursor: pointer;
    }
    
    .e-modal-content {
      flex-direction: column;
      
      h3 {
        margin-top: 0;
      }
        
      input {
        margin: 1rem 0;
        padding: .5rem;
      }
      
      input[type="text"] {
        width: calc(100% - 1rem);
      }
      
      .e-row {
        
        label {
          margin-left: .5rem;
        }
      }
      
      button {
        background-color: #D2434F;
        border: 0;
        color: #FFF;
        padding: .5rem 1.2rem;
        cursor: pointer;
      } 
    }
  }
  
  .e-modal-bg {
    position: fixed;
    background-color: rgba(0, 0, 0, .3);
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
  }
}
</style>
